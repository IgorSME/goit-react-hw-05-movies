{"version":3,"file":"static/js/reviews.af55b119.chunk.js","mappings":"wNAEaA,EAAUC,EAAAA,EAAAA,GAAH,4CAIPC,EAAOD,EAAAA,EAAAA,GAAH,4C,8ICJJE,EAAUF,EAAAA,EAAAA,GAAH,6CAGPG,EAAOH,EAAAA,EAAAA,EAAH,gD,SCDJI,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpC,OACE,UAACJ,EAAD,YACE,sCAAcG,MACd,SAACF,EAAD,UAAOG,MAGZ,E,8BCJc,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,IAAgBH,GADzC,cACQI,EADR,gBAEQL,EAAWK,EAASC,KAAKC,SAFjC,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACP,IAEmB,IAAnBF,EAAQU,QACH,qEAGP,SAAC,IAAD,UACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,SAACF,EAAD,CAAsBC,OAAQA,EAAQC,QAASA,GAA7Be,EADP,KAKlB,C,4MC3BKC,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUF,EADV,uCACiDD,EADjD,wBAC4E,GAD5E,SAEkBI,IAAAA,IAAUD,GAF5B,cAECV,EAFD,yBAIEA,GAJF,kEAOA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gFACCH,EADD,UACUF,EADV,iCAC2CD,EAD3C,iCACuEM,EADvE,SACqF,EADrF,iCAEkBF,IAAAA,IAAUD,GAF5B,cAECV,EAFD,yBAIEA,GAJF,kEAMA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAAkCR,GAAlC,gFACCI,EADD,UACUF,EADV,kBAC4BF,EAD5B,oBAC0CC,EAD1C,8BACmED,EADnE,SAC8E,EAD9E,iCAEkBK,IAAAA,IAAUD,GAF5B,cAECV,EAFD,yBAIEA,GAJF,kEAMA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA4BT,GAA5B,gFACCI,EADD,UACUF,EADV,kBAC4BF,EAD5B,4BACkDC,EADlD,4BAEkBI,IAAAA,IAAUD,GAF5B,cAECV,EAFD,yBAIEA,GAJF,kEAMA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA+BO,GAA/B,gFACCI,EADD,UACUF,EADV,kBAC4BF,EAD5B,4BACkDC,EADlD,mCAEkBI,IAAAA,IAAUD,GAF5B,cAECV,EAFD,yBAIEA,GAJF,kE","sources":["components/CastItem/CastItem.styled.jsx","components/ReviewsItem/ReviewsItem.styled.jsx","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","services/apiMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ItemBox = styled.ul`\n  padding: 0 34px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n`;\n","import styled from '@emotion/styled';\n\nexport const ItemRev = styled.li`\n  list-style: none;\n`;\nexport const Text = styled.p`\n  text-align: justify;\n`;\n","import { ItemRev } from './ReviewsItem.styled';\nimport { Text } from './ReviewsItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const ReviewsItem = ({ author, content }) => {\n  return (\n    <ItemRev>\n      <h3>Author : {author}</h3>\n      <Text>{content}</Text>\n    </ItemRev>\n  );\n};\n\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import { ItemBox } from 'components/CastItem/CastItem.styled';\nimport { ReviewsItem } from 'components/ReviewsItem/ReviewsItem';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiMovieReviews } from 'services/apiMovies';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetch() {\n      const response = await apiMovieReviews(movieId);\n      await setReviews(response.data.results);\n    }\n    fetch();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n  return (\n    <ItemBox>\n      {reviews.map(({ id, author, content }) => (\n        <ReviewsItem key={id} author={author} content={content} />\n      ))}\n    </ItemBox>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '17946609e7955dc7eecc361e64330c4b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function apiMovieTrennding() {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=${1}`;\n  const response = await axios.get(url);\n  //   console.log('trand', response);\n  return response;\n}\n\nexport async function apiMovieSearch(movie) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${movie}&page=${1}&include_adult=false`;\n  const response = await axios.get(url);\n  //   console.log(response);\n  return response;\n}\nexport async function apiMovieSearchById(id) {\n  const url = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US&id=${id}&page=${1}&include_adult=false`;\n  const response = await axios.get(url);\n  //   console.log(response);\n  return response;\n}\nexport async function apiMovieCast(id) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  //   console.log(response);\n  return response;\n}\nexport async function apiMovieReviews(id) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  const response = await axios.get(url);\n  // console.log(response);\n  return response;\n}\n"],"names":["ItemBox","styled","Item","ItemRev","Text","ReviewsItem","author","content","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","apiMovieReviews","response","data","results","fetch","length","map","id","KEY","BASE_URL","apiMovieTrennding","url","axios","apiMovieSearch","movie","apiMovieSearchById","apiMovieCast"],"sourceRoot":""}